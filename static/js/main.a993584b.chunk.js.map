{"version":3,"sources":["data/img/tv.png","data/img/test.jpg","App.js","scripts/mainPage.js","serviceWorker.js","index.js","logo.svg","data/icon/copycode_btn.png","data/icon/upload_btn.png","data/icon/generate_btn.png","data/icon/originimg_bg.png","data/icon/main_bg.png"],"names":["module","exports","__webpack_require__","p","App","maincanvas","img","MainPage","props","_this2","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleOnRenderSizeChange","renderWidthInput","document","getElementById","renderHeightInput","setState","renderWidth","value","renderHeight","handleOnRenderFontSizeChange","renderFontSize","handleOnFontBold","fontB","state","fontBold","handleUpload","_this","assertThisInitialized","file","files","reader","FileReader","readAsDataURL","onload","e","imageSrc","result","CurrentFileName","name","code","__this","console","log","src","width","height","handleFakeUploadOnClick","click","handleCopyClick","select","execCommand","handleGenerateClick","createElement","getContext","drawImage","tempPixelData","getImageData","data","pixelData","i","newLine","currentCode","length","grey","react_default","a","style","backgroundImage","mainBg","backgroundRepeat","display","flexDirection","alignItems","justifyContent","cursor","onClick","bind","uploadIcon","id","type","onChange","originImgBg","contentWidth","marginLeft","marginTop","color","padding","fontSize","maxHeight","maxWidth","generateIcon","copyIcon","margin","fontFamily","lineHeight","borderRadius","border","fontWeight","wrap","float","input","slider","min","max","defaultValue","step","es_checkbox","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","mainPage","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a993584b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/tv.2221a695.png\";","module.exports = __webpack_public_path__ + \"static/media/test.053901e8.jpg\";","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\r\nimport {Button, Slider, Input, Upload,Checkbox, message, Icon} from 'antd';\r\nimport tv from '../data/img/tv.png';\r\nimport test from '../data/img/test.jpg';\r\nimport '../index.css';\r\nimport { relative } from 'path';\r\nimport copyIcon from '../data/icon/copycode_btn.png';\r\nimport uploadIcon from '../data/icon/upload_btn.png';\r\nimport generateIcon from '../data/icon/generate_btn.png';\r\nimport originImgBg from '../data/icon/originimg_bg.png';\r\nimport mainBg from '../data/icon/main_bg.png';\r\n\r\nvar maincanvas, img;\r\nconst contentWidth = 1070;\r\nfunction getBase64(img, callback) {\r\n    const reader = new FileReader();\r\n    reader.addEventListener('load', () => callback(reader.result));\r\n    reader.readAsDataURL(img);\r\n  }\r\nclass MainPage extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            imageSrc:null,\r\n            code:'',\r\n            pixelData:null,\r\n            renderWidth:0,\r\n            renderHeight:0,\r\n            renderFontSize:3,\r\n            fontBold:false,\r\n            CurrentFileName:'',\r\n        }\r\n    }\r\n    handleOnRenderSizeChange=()=>{\r\n        var renderWidthInput = document.getElementById('renderWidthInput');\r\n        var renderHeightInput = document.getElementById('renderHeightInput');\r\n        this.setState({\r\n            renderWidth:renderWidthInput.value,\r\n            renderHeight:renderHeightInput.value,\r\n        })\r\n    }\r\n    handleOnRenderFontSizeChange=(value)=>{\r\n        this.setState({\r\n            renderFontSize:value,\r\n        })\r\n    }\r\n    handleOnFontBold=()=>{\r\n        var fontB = this.state.fontBold;\r\n        this.setState({\r\n            fontBold:!fontB,\r\n        })\r\n    }\r\n\r\n    handleUpload=()=>{\r\n        let _this = this;\r\n        var file = document.getElementById('mainUploadFile').files[0];\r\n        var reader=new FileReader();\r\n        reader.readAsDataURL(file); \r\n        reader.onload = function(e){\r\n            //file 对象的属性\r\n            \r\n            _this.setState({\r\n                imageSrc:reader.result,\r\n                CurrentFileName:file.name,\r\n                code:''\r\n            },()=>{\r\n                let __this = _this\r\n                img = document.getElementById('mainImg');\r\n                console.log(img.src);\r\n                img.onload = function(){\r\n                    __this.setState({\r\n                        renderWidth:img.width,\r\n                        renderHeight:img.height,\r\n                    })\r\n                }\r\n            })\r\n        };\r\n        // var fileSrc = window.URL.createObjectURL(file);\r\n        \r\n    }\r\n\r\n    // handleUpload=(info)=>{\r\n    //     if (info.file.status !== 'uploading') \r\n    //     {\r\n    //         console.log(info.file, info.fileList);\r\n    //       }\r\n    //       if (info.file.status === 'done') \r\n    //       {\r\n    //         getBase64(info.file.originFileObj, imageUrl => this.setState({\r\n    //             imageUrl,\r\n    //             loading: false,\r\n    //           },()=>{\r\n    //             const _this = this;\r\n    //             img = document.getElementById('mainImg');\r\n    //             img.onload = function(){\r\n                \r\n    //             _this.setState({\r\n    //                 renderWidth:img.width,\r\n    //                 renderHeight:img.height,\r\n    //             })\r\n    //         }\r\n    //           }));\r\n    //         message.success(`${info.file.name} file uploaded successfully`);\r\n    //       } \r\n    //       else if (info.file.status === 'error') {\r\n    //         message.error(`${info.file.name} file upload failed.`);\r\n            \r\n    //       }\r\n\r\n    // }\r\n\r\n    handleFakeUploadOnClick=()=>{\r\n        document.getElementById('mainUploadFile').click();\r\n    }\r\n    handleCopyClick=()=>{\r\n        var copyContent = document.getElementById('mainTextarea');\r\n        copyContent.select();\r\n        document.execCommand(\"Copy\");\r\n    }\r\n    handleGenerateClick=()=>{\r\n        maincanvas = document.createElement('canvas');\r\n        maincanvas.width = this.state.renderWidth;\r\n        maincanvas.height = this.state.renderHeight;\r\n        maincanvas.getContext('2d').drawImage(img, 0, 0, this.state.renderWidth, this.state.renderHeight);\r\n        var tempPixelData = maincanvas.getContext('2d').getImageData(0, 0, this.state.renderWidth, this.state.renderHeight).data;\r\n        // console.log(tempPixelData)\r\n        this.setState({\r\n            pixelData : tempPixelData,\r\n            code:''\r\n        },()=>{\r\n            var i = 0, newLine = 0;\r\n            var currentCode = this.state.code;\r\n            var pixelData = this.state.pixelData;\r\n\r\n            while(i<pixelData.length)\r\n            {\r\n                var grey = (pixelData[i]+pixelData[i+1]+pixelData[i+2])/3;\r\n                if(grey<25)\r\n                {\r\n                    currentCode = currentCode+'M';\r\n                }\r\n                else if(grey<50){\r\n                    currentCode = currentCode+'#';\r\n                }\r\n                else if(grey<75){\r\n                    currentCode = currentCode+'H';\r\n                }\r\n                else if(grey<100){\r\n                    currentCode = currentCode+'A';\r\n                }\r\n                else if(grey<125){\r\n                    currentCode = currentCode+'V';\r\n                }\r\n                else if(grey<150){\r\n                    currentCode = currentCode+'=';\r\n                }\r\n                else if(grey<175){\r\n                    currentCode = currentCode+'+';\r\n                }\r\n                else if(grey<200){\r\n                    currentCode = currentCode+'-';\r\n                }\r\n                else if(grey<225){\r\n                    currentCode = currentCode+'.';\r\n                }\r\n                else{\r\n                    currentCode = currentCode+' ';\r\n                }\r\n                i = i+4;\r\n                newLine = newLine+1;\r\n                if(newLine%this.state.renderWidth==0)\r\n                {\r\n                    currentCode = currentCode+'\\n';\r\n                    this.setState({\r\n                        code:currentCode,\r\n                    })\r\n                }\r\n\r\n            }\r\n        })\r\n        \r\n    }\r\n    \r\n    \r\n    render(){\r\n        return (\r\n            <div style={{backgroundImage: 'url('+mainBg+')',backgroundRepeat:'repeat-y', width:'100%',  display:'flex', flexDirection:'column', alignItems:'center'}}>\r\n            <div style={{height:160, display:'flex', justifyContent:'center', alignItems:'center'}}>\r\n                <span style={{width:486, height:78,  cursor:'pointer'}}\r\n                    onClick={this.handleFakeUploadOnClick.bind(this)}>\r\n                    <img src={uploadIcon}></img>\r\n                    <input id='mainUploadFile' type='file'  onChange={this.handleUpload.bind(this)} \r\n                    style={{width:120, height:48, display:'none'}}>\r\n                    </input>\r\n                </span>\r\n                {/* <Upload name='file' action='https://www.mocky.io/v2/5cc8019d300000980a055e76' headers={{authorization: 'authorization-text',}} \r\n                onChange={this.handleUpload.bind(this)}>\r\n                    <span style={{width:486, height:78,  cursor:'pointer'}}>\r\n                        <img src={uploadIcon}></img>\r\n                    </span>\r\n                </Upload> */}\r\n            </div>\r\n            <div style={{backgroundImage: 'url('+originImgBg+')',width:contentWidth, height:668, display:'flex', flexDirection:'column', alignItems:'center'}}>\r\n                <div style={{height:80,width:contentWidth-36,  display:'flex', alignItems:'center', \r\n                justifyContent:'flex-start',marginLeft:22, marginTop:2}}>\r\n                    <p style={{width:960, marginLeft:30, color:'black', padding:8,fontSize:20,}}>当前图片：{this.state.CurrentFileName}</p>\r\n                </div>\r\n                <div style={{height:580,width:960,display:'flex', justifyContent:'center', alignItems:'center',marginLeft:20}}>\r\n                    <img id='mainImg'  src={this.state.imageSrc} style={{maxHeight:560, maxWidth:936}}></img>\r\n                </div>\r\n                \r\n            </div>\r\n            <div style={{width:contentWidth, height:160, display:'flex', justifyContent:'space-around', alignItems:'center'}}>\r\n                <span style={{width:430, height:78,  cursor:'pointer'}} onClick={this.handleGenerateClick.bind(this)}>\r\n                    <img src={generateIcon}></img>\r\n                </span>\r\n                <span style={{width:430, height:78,  cursor:'pointer'}}  onClick={this.handleCopyClick.bind(this)}>\r\n                    <img src={copyIcon}></img>\r\n                </span>\r\n            </div>\r\n            <div >\r\n                    <textarea id='mainTextarea' type=\"text\" style={{margin:0,fontSize:this.state.renderFontSize,fontFamily:'宋体', width:contentWidth, height:800,\r\n                    lineHeight:1,padding:0,borderRadius:5, border:'3px solid black', fontWeight:this.state.fontBold?'bold':'normal'}} wrap='off' value={this.state.code}></textarea>\r\n            </div>\r\n                \r\n                \r\n                <div style={{width:contentWidth, height:240,display:'flex',alignItems:'center'}}>\r\n                    <div style={{width:contentWidth/2, float:'left', height:160}}>\r\n                        <div style={{display:'flex', height:80, alignItems:'center'}}>\r\n                            <p>宽&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;度：</p>\r\n                            <Input id='renderWidthInput' type='text' style={{width:100}} value={this.state.renderWidth} onChange={this.handleOnRenderSizeChange.bind(this)}>\r\n                            </Input>\r\n                            <p>&nbsp;&nbsp;pt</p>\r\n                        </div>\r\n                        <div style={{display:'flex', height:80,alignItems:'center'}}>\r\n                            <p>高&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;度：</p>\r\n                            <Input id='renderHeightInput' type='text' style={{width:100}} value={this.state.renderHeight} onChange={this.handleOnRenderSizeChange.bind(this)}>\r\n                            </Input>\r\n                            <p>&nbsp;&nbsp;pt</p>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div style={{width:contentWidth/2, float:'left', height:160}}>\r\n                        <div style={{display:'flex', height:80, alignItems:'center'}}>\r\n                            <p>字体大小：</p>\r\n                        <Slider id='fontSizeTrack' style={{width:200}} min={1} max={50} defaultValue={this.state.renderFontSize} \r\n                        onChange={this.handleOnRenderFontSizeChange.bind(this)} step={0.1}></Slider>\r\n                        </div>\r\n                        <div style={{display:'flex', height:80,alignItems:'center'}}>\r\n                        <p>加&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;粗：</p>\r\n                    <Checkbox onChange={this.handleOnFontBold.bind(this)}></Checkbox>\r\n                        </div>\r\n\r\n                    </div>\r\n                    \r\n                    \r\n                    \r\n                    \r\n                </div>\r\n                \r\n            </div>\r\n            \r\n        )\r\n    }\r\n}\r\nexport default MainPage;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport MainPage from './scripts/mainPage'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<MainPage />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/copycode_btn.f17b0ab7.png\";","module.exports = __webpack_public_path__ + \"static/media/upload_btn.296aec78.png\";","module.exports = __webpack_public_path__ + \"static/media/generate_btn.ddedb352.png\";","module.exports = __webpack_public_path__ + \"static/media/originimg_bg.b6b5f7b6.png\";","module.exports = __webpack_public_path__ + \"static/media/main_bg.d9517507.png\";"],"sourceRoot":""}